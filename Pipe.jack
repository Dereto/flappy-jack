class Pipe {
	field int width;
	field int speed;
	field int x;
	field int gap_size;
	field int gap_top, gap_bottom;
	field int screen_height;
	
	constructor Pipe new() {
		let width = 12;
		let speed = 1;
		let x = 511 - width;
		let screen_height = 256;
		let gap_size = 80;
		let gap_top = getRandGapTop();
		let gap_bottom = (gap_top + gap_size);
		
		return this;
	}
	
	method int getRandGapTop() {
		var int offset;
		let offset = Random.randRange(7);
		
		return (offset + 1) * 20;
	}
	
	method void shiftLeft() {
		if (x < (512 - width)) {
			do Screen.setColor(false);
			do Screen.drawRectangle(x + width - speed, 0, x + width, gap_top);
			do Screen.drawRectangle(x + width - speed, gap_bottom, x + width, 255);
		}
		
		if (x > 1) {
			let x = x - speed;
		} else {
			let x = 0;
		}
		
		return;
	}
	
	method int getWidth() {
		return width;
	}
	
	method int getX() {
		return x;
	}
	
	method int getGapTop() {
		return gap_top;
	}
	
	method int getGapBottom() {
		return gap_bottom;
	}
	
	method void draw() {
		if (x - speed > 0) {
			do Screen.setColor(true);
			do Screen.drawRectangle(x - speed, 0, x, gap_top);
			do Screen.drawRectangle(x - speed, gap_bottom, x, 255);
		}
		
		return;
	}
	
	method void dispose() {
		do Screen.setColor(false);
		do Screen.drawRectangle(0, 0, width + 1, gap_top);
		do Screen.drawRectangle(0, gap_bottom, width + 1, 255);
		do Memory.deAlloc(this);
		
		return;
	}
}